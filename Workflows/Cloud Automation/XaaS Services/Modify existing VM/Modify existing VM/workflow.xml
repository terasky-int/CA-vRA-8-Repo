<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:workflow xmlns:ns2="http://vmware.com/vco/workflow" root-name="item6" object-name="workflow:name=generic" id="2016b41d-8adc-4828-a1d6-6fedc5cbefdd" editor-version="2.0" version="0.0.1" api-version="6.0.0" allowed-operations="vfe" restartMode="1" resumeFromFailedMode="0">
    <display-name>Modify existing VM</display-name>
    <position y="10.0" x="40.0"/>
    <input>
        <param name="vcvm" type="VC:VirtualMachine"/>
        <param name="cpu" type="string"/>
        <param name="memory" type="string"/>
        <param name="diskSize" type="string"/>
        <param name="whichWorkflow" type="Array/string"/>
    </input>
    <output>
        <param name="scriptOutputTextOut" type="string"/>
        <param name="scriptExitCodeOut" type="number"/>
        <param name="actionResult" type="string"/>
    </output>
    <attrib name="actionToCreate" type="string">
        <value encoded="n"></value>
    </attrib>
    <attrib name="deploymentID" type="string">
        <value encoded="n"></value>
    </attrib>
    <attrib name="resourceId" type="string">
        <value encoded="n"></value>
    </attrib>
    <workflow-item name="item0" type="end" end-mode="0" comparator="0">
        <in-binding/>
        <out-binding/>
        <position y="150.0" x="800.0"/>
    </workflow-item>
    <workflow-item name="item1" type="switch" comparator="0">
        <display-name>Switch</display-name>
        <script encoded="false">// Generated by the system, cannot be edited
if (actionToCreate.indexOf("ram") !== -1) {
  return "item2";
} else if (actionToCreate.indexOf("cpu") !== -1) {
  return "item4";
} else if (actionToCreate.indexOf("disk") !== -1) {
  return "item3";
} else if (true) {
  return "item2";
}
</script>
        <in-binding>
            <bind name="actionToCreate" type="string" export-name="actionToCreate"/>
        </in-binding>
        <out-binding/>
        <description>Basic switch activity based on a workflow attribute or parameter.</description>
        <condition name="actionToCreate" type="string" comparator="1" label="item2">ram</condition>
        <condition name="actionToCreate" type="string" comparator="1" label="item4">cpu</condition>
        <condition name="actionToCreate" type="string" comparator="1" label="item3">disk</condition>
        <condition name="" type="boolean" comparator="6" label="item2"></condition>
        <position y="90.0" x="440.0"/>
    </workflow-item>
    <workflow-item name="item2" out-name="item12" type="link" linked-workflow-id="b68898ce-7337-40b2-b544-c90a57962aa0" comparator="0">
        <display-name>Add RAM to VM</display-name>
        <in-binding>
            <bind name="Memory" type="string" export-name="memory"/>
            <bind name="vcvm" type="VC:VirtualMachine" export-name="vcvm"/>
        </in-binding>
        <out-binding/>
        <description> </description>
        <position y="90.0" x="580.0"/>
    </workflow-item>
    <workflow-item name="item3" out-name="item12" type="link" linked-workflow-id="84ff78d7-271d-4471-8152-fc54f7b04f48" comparator="0">
        <display-name>Add Disk to vm</display-name>
        <in-binding>
            <bind name="Size" type="string" export-name="diskSize"/>
            <bind name="vcvm" type="VC:VirtualMachine" export-name="vcvm"/>
        </in-binding>
        <out-binding>
            <bind name="scriptExitCodeOut" type="number" export-name="scriptExitCodeOut"/>
            <bind name="scriptOutputTextOut" type="string" export-name="scriptOutputTextOut"/>
        </out-binding>
        <description> </description>
        <position y="30.0" x="580.0"/>
    </workflow-item>
    <workflow-item name="item4" out-name="item12" type="link" linked-workflow-id="2e1ab593-deda-4891-b190-4b21424d9c6b" comparator="0">
        <display-name>Add CPU to VM</display-name>
        <in-binding>
            <bind name="vcvm" type="VC:VirtualMachine" export-name="vcvm"/>
            <bind name="cpu" type="string" export-name="cpu"/>
        </in-binding>
        <out-binding/>
        <description> </description>
        <position y="160.0" x="580.0"/>
    </workflow-item>
    <workflow-item name="item5" type="end" end-mode="0" comparator="0">
        <in-binding/>
        <out-binding/>
        <position y="160.0" x="40.0"/>
    </workflow-item>
    <workflow-item name="item6" out-name="item13" alt-out-name="item5" type="custom-condition" comparator="0">
        <display-name>Was workflow selected?</display-name>
        <script encoded="false">if(!whichWorkflow)
{
    return false
}
else
{
    return true
}</script>
        <in-binding>
            <bind name="whichWorkflow" type="Array/string" export-name="whichWorkflow"/>
        </in-binding>
        <out-binding/>
        <description>Custom decision based on a custom script.</description>
        <position y="80.0" x="0.0"/>
    </workflow-item>
    <workflow-item name="item7" type="end" end-mode="0" comparator="0">
        <in-binding/>
        <out-binding/>
        <position y="270.0" x="260.0"/>
    </workflow-item>
    <workflow-item name="item8" out-name="item10" alt-out-name="item9" type="custom-condition" comparator="0">
        <display-name>How many actions were selected ?</display-name>
        <script encoded="false">System.log("actions length is " + whichWorkflow.length)
if (whichWorkflow.length &gt; 1)
{
    return false;
}
else 
{
    return true
}</script>
        <in-binding>
            <bind name="whichWorkflow" type="Array/string" export-name="whichWorkflow"/>
        </in-binding>
        <out-binding/>
        <description>Custom decision based on a custom script.</description>
        <position y="80.0" x="220.0"/>
    </workflow-item>
    <workflow-item name="item9" out-name="item11" type="task" comparator="0">
        <display-name>Run actions</display-name>
        <script encoded="false">//Function to run each workflow whith its use-cases
function executeWorkflow(inputs, workflowID)
{
    var worfklowRun = System.getModule("com.vmware.library.workflow").getWorkflowById(workflowID)
    System.log("Executin workflow " + worfklowRun.name)
    var workflowInputs = new Properties();
    for (input in inputs)
    {
        workflowInputs.put(input, inputs[input])
    }
    var workflowProgress = worfklowRun.execute(workflowInputs)
    System.getModule("com.vmware.library.workflow").waitAllWorkflowComplete([workflowProgress]);
    System.log("Workflow " + workflowProgress.name + " state: " + workflowProgress.state)
}


for each (action in whichWorkflow)
{
    var inputs = new Properties();
    inputs.put("vcvm", vcvm);
    switch (action)
    {
        case "ram":
            inputs.put("Memory", memory);
            var workflowID = 'b68898ce-7337-40b2-b544-c90a57962aa0'
            executeWorkflow(inputs,workflowID)
            break;
        case "cpu":
            inputs.put("cpu", cpu);
            var workflowID = '2e1ab593-deda-4891-b190-4b21424d9c6b'
            executeWorkflow(inputs,workflowID)
            break;

        case "disk":
            inputs.put("Size", diskSize)
            var workflowID = '84ff78d7-271d-4471-8152-fc54f7b04f48'
            executeWorkflow(inputs,workflowID)
            break;

    }
}
</script>
        <in-binding>
            <bind name="whichWorkflow" type="Array/string" export-name="whichWorkflow"/>
            <bind name="vcvm" type="VC:VirtualMachine" export-name="vcvm"/>
            <bind name="memory" type="string" export-name="memory"/>
            <bind name="cpu" type="string" export-name="cpu"/>
            <bind name="diskSize" type="string" export-name="diskSize"/>
        </in-binding>
        <out-binding/>
        <description>Simple task with custom script capability.</description>
        <position y="170.0" x="220.0"/>
    </workflow-item>
    <workflow-item name="item10" out-name="item1" type="task" comparator="0">
        <display-name>Define action</display-name>
        <script encoded="false">//Define action
//We must define the action in a string variable in order to user the following item (switch desicion)
actionToCreate = whichWorkflow[0]</script>
        <in-binding>
            <bind name="whichWorkflow" type="Array/string" export-name="whichWorkflow"/>
        </in-binding>
        <out-binding>
            <bind name="actionToCreate" type="string" export-name="actionToCreate"/>
        </out-binding>
        <description>Simple task with custom script capability.</description>
        <position y="90.0" x="340.0"/>
    </workflow-item>
    <workflow-item name="item11" out-name="item7" type="task" script-module="com.ca.vra.deployment.actions/powerOnVM" comparator="0">
        <display-name>powerOnVM</display-name>
        <script encoded="false">//Auto generated script, cannot be modified !
actionResult = System.getModule("com.ca.vra.deployment.actions").powerOnVM(resourceId);
</script>
        <in-binding>
            <bind name="resourceId" type="string" export-name="resourceId">
                <description></description>
            </bind>
        </in-binding>
        <out-binding>
            <bind name="actionResult" type="string" export-name="actionResult"/>
        </out-binding>
        <description>Add a note to the workflow schema.</description>
        <position y="230.0" x="220.0"/>
    </workflow-item>
    <workflow-item name="item12" out-name="item0" type="task" script-module="com.ca.vra.deployment.actions/powerOnVM" comparator="0">
        <display-name>powerOnVM</display-name>
        <script encoded="false">//Auto generated script, cannot be modified !
actionResult = System.getModule("com.ca.vra.deployment.actions").powerOnVM(resourceId);
</script>
        <in-binding>
            <bind name="resourceId" type="string" export-name="resourceId"/>
        </in-binding>
        <out-binding>
            <bind name="actionResult" type="string" export-name="actionResult"/>
        </out-binding>
        <description>Add a note to the workflow schema.</description>
        <position y="90.0" x="760.0"/>
    </workflow-item>
    <workflow-item name="item13" out-name="item8" type="task" comparator="0">
        <display-name>Retrieve deployment and resource id</display-name>
        <script encoded="false">var pathUri = '/deployment/api/deployments?search=' + vcvm.name
var content = System.getModule("com.ca.vra.host").vraGetOperation(pathUri)
content = JSON.parse(content)

for each (deployment in content.content)
{
    deploymentID = deployment.id
    System.log(deploymentID)
    var pathUri = '/deployment/api/deployments/' + deploymentID + '/resources'
    var content = System.getModule("com.ca.vra.host").vraGetOperation(pathUri)
    content = JSON.parse(content)
    for each(resource in content.content)
    {
        if (resource.type == "Cloud.vSphere.Machine")
        {
            if(resource.properties.resourceName == vcvm.name)
            {
                deploymentID = deployment.id
                resourceId = resource.properties.resourceId
                break;
            }
        }
    }
}</script>
        <in-binding>
            <bind name="vcvm" type="VC:VirtualMachine" export-name="vcvm"/>
        </in-binding>
        <out-binding>
            <bind name="deploymentID" type="string" export-name="deploymentID"/>
            <bind name="resourceId" type="string" export-name="resourceId"/>
        </out-binding>
        <description>Simple task with custom script capability.</description>
        <position y="90.0" x="100.0"/>
    </workflow-item>
</ns2:workflow>
